
chmod 777 f1.txt
chmod +x f1.txt
chmod +x ./test.sh

linux top
ls -lh 可以在列出文件的同时查看文件的大小

=================
Linux

首先我们在桌面上创建一个文件，执行命令vi file.test

这时候我们已经创建了文件，运行命令：ls -l | grep file.test查看权限，运行结果如下图所示：
-rw-r--r--

这里我们对Linux权限做简单的介绍：
上图中权限最开始是-(常规文件)，而还有可能的开头还有，
“d”目录(非常常见，你随便找一个目录，在这个目录的上一层目录ls -l一下就可以看到)
“l”符号链接(通过ln 创建的一些链接)
“c”字符专门设备文件
“b”块专门设备文件
“p”先进先出
“s”套接字

然后我们开始看第一个-后面的字段，三个为一组看，第一个三元字符组(rw-)代表文件所有者的权限，第二个(r--)代表文件的组的权限，第三个（r--）代表所有其他用户的权限

r 和 w分别代表什么意思呢？分别代表 可读read 和 可写write。还有一个目前文件没有该权限，即x 可执行（execute），那我们现在到底有什么权限呢，一般我们拥有 第一个三元字符组 代表的权限，即：可读可写

好了，那我么赋于他可执行权限 chmod +x file.test，这样是赋予三个文件所有者可执行权限，我们也可以执行 chmod u+x file.test仅仅给我们自己加权限。

有关于chmod指令详细介绍，可以执行chmod --help查看
================
实际应用中可能有这样的场景：给定一个进程名称特征串，查找所有匹配该进程名称的进程的详细信息。
解决的办法是：
(1) 先用pgrep [str] 命令进行模糊匹配，找到匹配该特征串的进程ID；
(2) 其次根据进程ID显示指定的进程信息，ps --pid [pid]；
(3) 因为查找出来的进程ID需要被作为参数传递给ps命令，故使用xargs命令，通过管道符号连接；
(4) 最后显示进程详细信息，需要加上-u参数。
最终命令形如:
pgrep Java | xargs ps -u --pid
pgrep BEA-141281  | xargs ps -u --pid

kill 命令用于终止进程
例如： kill -9 [PID]
===================

实际应用中可能有这样的场景：给定一个进程名称特征串，查找所有匹配该进程名称的进程的详细信息。
解决的办法是：
(1) 先用pgrep [str] 命令进行模糊匹配，找到匹配该特征串的进程ID；
(2) 其次根据进程ID显示指定的进程信息，ps --pid [pid]；
(3) 因为查找出来的进程ID需要被作为参数传递给ps命令，故使用xargs命令，通过管道符号连接；
(4) 最后显示进程详细信息，需要加上-u参数。
最终命令形如:
pgrep Java | xargs ps -u --pid
pgrep BEA-141281  | xargs ps -u --pid

kill 命令用于终止进程
例如： kill -9 [PID]
===================


实际应用中可能有这样的场景：给定一个进程名称特征串，查找所有匹配该进程名称的进程的详细信息。
解决的办法是：
(1) 先用pgrep [str] 命令进行模糊匹配，找到匹配该特征串的进程ID；
(2) 其次根据进程ID显示指定的进程信息，ps --pid [pid]；
(3) 因为查找出来的进程ID需要被作为参数传递给ps命令，故使用xargs命令，通过管道符号连接；
(4) 最后显示进程详细信息，需要加上-u参数。
最终命令形如:
pgrep Java | xargs ps -u --pid
pgrep BEA-141281  | xargs ps -u --pid

kill 命令用于终止进程
例如： kill -9 [PID]
===================
